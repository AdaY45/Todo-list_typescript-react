{"version":3,"sources":["components/TodoItem.module.css","components/NewTodo.module.css","components/Todos.module.css","components/TodoItem.tsx","models/todo.ts","store/todos-context.tsx","components/Todos.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["module","exports","Item","props","className","classes","item","text","cancel","onClick","event","preventDefault","onDeleteTodo","id","Todo","todoText","this","Date","toISOString","TodosContext","React","createContext","items","addTodo","deleteTodo","TodosContextProvider","useState","todos","setTodos","contextValue","newTodo","prevState","todoId","filter","Provider","value","children","Todos","todosCtx","useContext","map","TodoItem","bind","NewTodo","todoTextInputRef","useRef","onSubmit","enteredText","current","trim","length","form","htmlFor","type","ref","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,YAAY,4BAA4B,OAAS,yBAAyB,YAAY,8B,iBCAxGD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,UAAU,2B,kBCAzDD,EAAOC,QAAU,CAAC,aAAa,0BAA0B,iBAAiB,gC,kJCiB3DC,EAf4D,SAACC,GAO1E,OACE,qBAAIC,UAAWC,IAAQ,aAAvB,UACE,qBAAKD,UAAWC,IAAQ,aAAxB,SAAuCF,EAAMG,KAAKC,OAClD,wBAAQH,UAAWC,IAAQG,OAAQC,QATlB,SAACC,GAChBA,EAAMC,iBAENR,EAAMS,aAAaT,EAAMG,KAAKO,KAMhC,iBAFwCV,EAAMG,KAAKO,K,uBCD1CC,EANb,WAAYC,GAAmB,yBAH/BF,QAG8B,OAF9BN,UAE8B,EAC5BS,KAAKT,KAAOQ,EACZC,KAAKH,IAAK,IAAII,MAAOC,eCGZC,EAAeC,IAAMC,cAA8B,CAC9DC,MAAO,GACPC,QAAS,aACTC,WAAY,SAACX,OAkCAY,EA/BwB,SAACtB,GACtC,MAA0BuB,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAgBMC,EAA+B,CACnCP,MAAOK,EACPJ,QAhBqB,SAACR,GACtB,IAAMe,EAAU,IAAIhB,EAAKC,GAEzBa,GAAS,SAACG,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBD,QAaxBN,WATwB,SAACQ,GACzBJ,GAAS,SAACG,GACR,OAAOA,EAAUE,QAAO,SAAC3B,GAAD,OAAUA,EAAKO,KAAOmB,UAUlD,OACE,cAACb,EAAae,SAAd,CAAuBC,MAAON,EAA9B,SACG1B,EAAMiC,Y,gBCtBEC,EAZS,WACtB,IAAMC,EAAWC,qBAAWpB,GAE1B,OACA,oBAAIf,UAAWC,IAAQ,cAAvB,SACGiC,EAAShB,MAAMkB,KAAI,SAAClC,GAAD,OAChB,cAACmC,EAAD,CAAUnC,KAAMA,EAAMM,aAAc0B,EAASd,WAAWkB,KAAK,KAAMpC,EAAKO,Y,gBCmBnE8B,EA1BW,WACxB,IAAML,EAAWC,qBAAWpB,GACtByB,EAAmBC,iBAAyB,MAelD,OACE,uBAAMC,SAdc,SAACpC,GACrBA,EAAMC,iBAEN,IAAMoC,EAAcH,EAAiBI,QAASb,MAEZ,IAA9BY,EAAYE,OAAOC,SAIvBZ,EAASf,QAAQwB,GACjBH,EAAiBI,QAASb,MAAQ,KAIH/B,UAAWC,IAAQ8C,KAAlD,UACE,uBAAOC,QAAQ,OAAf,wBACA,uBAAOC,KAAK,OAAOxC,GAAG,OAAOyC,IAAKV,EAAkBW,YAAY,aAChE,wBAAQnD,UAAWC,IAAQ,WAA3B,0B,MCTSmD,MAXf,WACE,OACE,cAAC,EAAD,UACE,sBAAKpD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCNRqD,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.08c06bca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-item\":\"TodoItem_todo-item__3qIpp\",\"cancel\":\"TodoItem_cancel__G5-j5\",\"todo-text\":\"TodoItem_todo-text__1R5fw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__1O6AQ\",\"add-btn\":\"NewTodo_add-btn__2BrLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos-list\":\"Todos_todos-list__3XJ1z\",\"todo-list-item\":\"Todos_todo-list-item__14nbs\"};","import Todo from \"../models/todo\";\r\nimport classes from \"./TodoItem.module.css\";\r\n\r\nconst Item: React.FC<{ item: Todo, onDeleteTodo: (id: string) => void }> = (props) => {\r\n    const deleteTodo = (event: React.MouseEvent) => {\r\n        event.preventDefault();\r\n\r\n        props.onDeleteTodo(props.item.id);\r\n    }\r\n\r\n  return (\r\n    <li className={classes[\"todo-item\"]} key={props.item.id}>\r\n      <div className={classes[\"todo-text\"]}>{props.item.text}</div>\r\n      <button className={classes.cancel} onClick={deleteTodo}>x</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","class Todo {\r\n  id: string;\r\n  text: string;\r\n\r\n  constructor(todoText: string) {\r\n    this.text = todoText;\r\n    this.id = new Date().toISOString();\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"../models/todo\";\r\n\r\ntype TodoContextObj = {\r\n  items: Todo[];\r\n  addTodo: (text: string) => void;\r\n  deleteTodo: (id: string) => void;\r\n};\r\n\r\nexport const TodosContext = React.createContext<TodoContextObj>({\r\n  items: [],\r\n  addTodo: () => {},\r\n  deleteTodo: (id: string) => {},\r\n});\r\n\r\nconst TodosContextProvider: React.FC = (props) => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n  const addTodoHandler = (todoText: string) => {\r\n    const newTodo = new Todo(todoText);\r\n\r\n    setTodos((prevState) => {\r\n      return [...prevState, newTodo];\r\n    });\r\n  };\r\n\r\n  const deleteTodoHandler = (todoId: string) => {\r\n    setTodos((prevState) => {\r\n      return prevState.filter((item) => item.id !== todoId);\r\n    });\r\n  };\r\n\r\n  const contextValue: TodoContextObj = {\r\n    items: todos,\r\n    addTodo: addTodoHandler,\r\n    deleteTodo: deleteTodoHandler,\r\n  };\r\n\r\n  return (\r\n    <TodosContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </TodosContext.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default TodosContextProvider;","import { useContext } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { TodosContext } from \"../store/todos-context\";\r\n\r\nimport classes from \"./Todos.module.css\";\r\n\r\nconst Todos: React.FC = () => {\r\n  const todosCtx = useContext(TodosContext);\r\n\r\n    return (\r\n    <ul className={classes[\"todos-list\"]}>\r\n      {todosCtx.items.map((item) => (\r\n          <TodoItem item={item} onDeleteTodo={todosCtx.deleteTodo.bind(null, item.id)}/> //pre-configure function to get the right id\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import { useRef, useContext } from \"react\";\r\nimport { TodosContext } from \"../store/todos-context\";\r\n\r\nimport classes from \"./NewTodo.module.css\";\r\n\r\nconst NewTodo: React.FC = () => {\r\n  const todosCtx = useContext(TodosContext);\r\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const enteredText = todoTextInputRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    todosCtx.addTodo(enteredText);\r\n    todoTextInputRef.current!.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <label htmlFor=\"text\">To do list</label>\r\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} placeholder=\"Title...\"/>\r\n      <button className={classes[\"add-btn\"]}>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n","import Todos from \"./components/Todos\";\nimport NewTodo from \"./components/NewTodo\";\n\nimport \"./App.css\";\nimport TodosContextProvider from \"./store/todos-context\";\n\nfunction App() {\n  return (\n    <TodosContextProvider>\n      <div className=\"container\">\n        <NewTodo />\n        <Todos />\n      </div>\n    </TodosContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}