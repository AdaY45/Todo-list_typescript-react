{"version":3,"sources":["components/TodoItem.module.css","components/NewTodo.module.css","components/Todos.module.css","components/TodoItem.tsx","models/todo.ts","store/todos-context.tsx","components/Todos.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["module","exports","Item","props","useState","isChecked","setIsChecked","onClick","className","classes","item","text","cancel","event","preventDefault","onDeleteTodo","id","Todo","todoText","this","Date","toISOString","TodosContext","React","createContext","items","addTodo","deleteTodo","TodosContextProvider","todos","setTodos","contextValue","newTodo","prevState","todoId","filter","Provider","value","children","Todos","todosCtx","useContext","map","TodoItem","bind","NewTodo","todoTextInputRef","useRef","onSubmit","enteredText","current","trim","length","form","htmlFor","type","ref","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,YAAY,4BAA4B,OAAS,yBAAyB,YAAY,4BAA4B,QAAU,4B,mBCA9ID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,UAAU,2B,kBCAzDD,EAAOC,QAAU,CAAC,aAAa,0BAA0B,iBAAiB,gC,wJCmC3DC,EA7BV,SAACC,GACJ,MAAkCC,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KAYA,OACE,qBACEC,QAZmB,WACrBD,GAAcD,IAYZG,UAAS,UAAMC,IAAQ,aAAd,YAA8BJ,EAAYI,IAAO,QAAc,IAF1E,UAOE,qBAAKD,UAAWC,IAAQ,aAAxB,SAAuCN,EAAMO,KAAKC,OAClD,wBAAQH,UAAWC,IAAQG,OAAQL,QAfpB,SAACM,GAClBA,EAAMC,iBAENX,EAAMY,aAAaZ,EAAMO,KAAKM,KAY5B,iBAHKb,EAAMO,KAAKM,K,eChBPC,EANb,WAAYC,GAAmB,yBAH/BF,QAG8B,OAF9BL,UAE8B,EAC5BQ,KAAKR,KAAOO,EACZC,KAAKH,IAAK,IAAII,MAAOC,eCGZC,EAAeC,IAAMC,cAA8B,CAC9DC,MAAO,GACPC,QAAS,aACTC,WAAY,SAACX,OAkCAY,EA/BwB,SAACzB,GACtC,MAA0BC,mBAAiB,IAA3C,mBAAOyB,EAAP,KAAcC,EAAd,KAgBMC,EAA+B,CACnCN,MAAOI,EACPH,QAhBqB,SAACR,GACtB,IAAMc,EAAU,IAAIf,EAAKC,GAEzBY,GAAS,SAACG,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBD,QAaxBL,WATwB,SAACO,GACzBJ,GAAS,SAACG,GACR,OAAOA,EAAUE,QAAO,SAACzB,GAAD,OAAUA,EAAKM,KAAOkB,UAUlD,OACE,cAACZ,EAAac,SAAd,CAAuBC,MAAON,EAA9B,SACG5B,EAAMmC,Y,iBCtBEC,EAZS,WACtB,IAAMC,EAAWC,qBAAWnB,GAE1B,OACA,oBAAId,UAAWC,IAAQ,cAAvB,SACG+B,EAASf,MAAMiB,KAAI,SAAChC,GAAD,OAChB,cAACiC,EAAD,CAAUjC,KAAMA,EAAMK,aAAcyB,EAASb,WAAWiB,KAAK,KAAMlC,EAAKM,Y,gBCmBnE6B,EA1BW,WACxB,IAAML,EAAWC,qBAAWnB,GACtBwB,EAAmBC,iBAAyB,MAelD,OACE,uBAAMC,SAdc,SAACnC,GACrBA,EAAMC,iBAEN,IAAMmC,EAAcH,EAAiBI,QAASb,MAEZ,IAA9BY,EAAYE,OAAOC,SAIvBZ,EAASd,QAAQuB,GACjBH,EAAiBI,QAASb,MAAQ,KAIH7B,UAAWC,IAAQ4C,KAAlD,UACE,uBAAOC,QAAQ,OAAf,wBACA,uBAAOC,KAAK,OAAOvC,GAAG,OAAOwC,IAAKV,EAAkBW,YAAY,aAChE,wBAAQjD,UAAWC,IAAQ,WAA3B,0B,MCTSiD,MAXf,WACE,OACE,cAAC,EAAD,UACE,sBAAKlD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCNRmD,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c96b5128.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-item\":\"TodoItem_todo-item__3qIpp\",\"cancel\":\"TodoItem_cancel__G5-j5\",\"todo-text\":\"TodoItem_todo-text__1R5fw\",\"checked\":\"TodoItem_checked__3fUi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__1O6AQ\",\"add-btn\":\"NewTodo_add-btn__2BrLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos-list\":\"Todos_todos-list__3XJ1z\",\"todo-list-item\":\"Todos_todo-list-item__14nbs\"};","import { useState } from \"react\";\r\nimport Todo from \"../models/todo\";\r\nimport classes from \"./TodoItem.module.css\";\r\n\r\nconst Item: React.FC<{\r\n  item: Todo;\r\n  onDeleteTodo: (id: string) => void;\r\n}> = (props) => {\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n\r\n  const checkedHandler = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  const deleteTodo = (event: React.MouseEvent) => {\r\n    event.preventDefault();\r\n\r\n    props.onDeleteTodo(props.item.id);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={checkedHandler}\r\n      className={ `${classes[\"todo-item\"]} ${isChecked ? classes['checked'] : ''}`\r\n        // isChecked ? classes[\"todo-item\"] + \" \" + classes.checked : classes[\"todo-item\"]\r\n      }\r\n      key={props.item.id}\r\n    >\r\n      <div className={classes[\"todo-text\"]}>{props.item.text}</div>\r\n      <button className={classes.cancel} onClick={deleteTodo}>\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","class Todo {\r\n  id: string;\r\n  text: string;\r\n\r\n  constructor(todoText: string) {\r\n    this.text = todoText;\r\n    this.id = new Date().toISOString();\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"../models/todo\";\r\n\r\ntype TodoContextObj = {\r\n  items: Todo[];\r\n  addTodo: (text: string) => void;\r\n  deleteTodo: (id: string) => void;\r\n};\r\n\r\nexport const TodosContext = React.createContext<TodoContextObj>({\r\n  items: [],\r\n  addTodo: () => {},\r\n  deleteTodo: (id: string) => {},\r\n});\r\n\r\nconst TodosContextProvider: React.FC = (props) => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n  const addTodoHandler = (todoText: string) => {\r\n    const newTodo = new Todo(todoText);\r\n\r\n    setTodos((prevState) => {\r\n      return [...prevState, newTodo];\r\n    });\r\n  };\r\n\r\n  const deleteTodoHandler = (todoId: string) => {\r\n    setTodos((prevState) => {\r\n      return prevState.filter((item) => item.id !== todoId);\r\n    });\r\n  };\r\n\r\n  const contextValue: TodoContextObj = {\r\n    items: todos,\r\n    addTodo: addTodoHandler,\r\n    deleteTodo: deleteTodoHandler,\r\n  };\r\n\r\n  return (\r\n    <TodosContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </TodosContext.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default TodosContextProvider;","import { useContext } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { TodosContext } from \"../store/todos-context\";\r\n\r\nimport classes from \"./Todos.module.css\";\r\n\r\nconst Todos: React.FC = () => {\r\n  const todosCtx = useContext(TodosContext);\r\n\r\n    return (\r\n    <ul className={classes[\"todos-list\"]}>\r\n      {todosCtx.items.map((item) => (\r\n          <TodoItem item={item} onDeleteTodo={todosCtx.deleteTodo.bind(null, item.id)}/> //pre-configure function to get the right id\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import { useRef, useContext } from \"react\";\r\nimport { TodosContext } from \"../store/todos-context\";\r\n\r\nimport classes from \"./NewTodo.module.css\";\r\n\r\nconst NewTodo: React.FC = () => {\r\n  const todosCtx = useContext(TodosContext);\r\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const enteredText = todoTextInputRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    todosCtx.addTodo(enteredText);\r\n    todoTextInputRef.current!.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <label htmlFor=\"text\">To do list</label>\r\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} placeholder=\"Title...\"/>\r\n      <button className={classes[\"add-btn\"]}>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n","import Todos from \"./components/Todos\";\nimport NewTodo from \"./components/NewTodo\";\n\nimport \"./App.css\";\nimport TodosContextProvider from \"./store/todos-context\";\n\nfunction App() {\n  return (\n    <TodosContextProvider>\n      <div className=\"container\">\n        <NewTodo />\n        <Todos />\n      </div>\n    </TodosContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}